(p (anc view)
 (def ib (i (b {0})))
 (def thumb 
   (link {0} (img {0} {1}) (br) {1} (br) (br)))
 (def title (h2 (anc {0}) (link #view #) {1}))
 (h2 Example Lispmark Page)
 
 (sym emsp)
 (link #inspiration Inspiration)
 (sym lambda)
 (link #difference Differences)
 (sym lambda)
 (link #support Supported HTML) 
 (br (sym emsp) (link #composing Composing functions))

 (p LispMark is a mostly complete, public domain\ (sym trade)
 language.)
 (p It can already handle many HTML
     tags, and will soon support user-definable macros.)
 (p The special characters (tt ["\(", "\)", " "]) are
    (tt \\ ) escapable. (tt \\\\ ) escapes (tt \\ ).)
 (title inspiration Inspiration)
 (p The inspirations for this project are plenty:
  (ul
  (li Sexpcode, for trying to replace BBcode with SEXPs,)
  (li Arc, for trying to bring backend webdev into LISP,)
  (li Lis.py, for illustrating a basic LISP in python,)
  (li Curl, for trying to use list-based markup,)
  (li Bach, for trying to do these in Python)
  ))
 (title difference Differences)
 (p Unlike Markdown, LispMark (sym hellip)
  (ul
  (li is easily extendible through macros) 
  (li permits normal usage of normal characters)
  (li has non-ambiguous syntax)
  (li has few special characters)
  (li includes HTML <a> anchors out of the box)
  (li etc.)
  ))
 (p Unlike BBcode, Lispmark's syntax is not mind-numbing,
     and is comparatively abstract.)
 (p Unlike Sexpcode, targeted at replacing BBcode, 
     LispMark will intend to generally replace human
     writing of HTML.)
 (title support Supported HTML)
 (p Lispmark currently supports the following tags: 
  (p) (table
    (tr (th Tag name) (th Meaning))  
    (tr (td \(b text\)) (td (b Bold)))
    (tr (td \(i text\)) (td (i Italics)))
    (tr (td \(u text\)) (td (u Underline)))
    (tr (td \(o text\)) (td (o Overline)))
    (tr (td \(s text\)) (td (s Strikethrough)))
    (tr (td \(sp text\)) (td (sp Spoiler)))
    (tr (td \(tt text\)) (td (tt Teletype)))
    (tr (td \(q text\)) (td Quotes text))
    (tr (td \(img src [title]\)) (td Creates an image with
    	    optional title.))
    (tr (td \(url href\)) (td Creates a transparent link.))
    (tr (td \(link href [text]\)) (td Creates hyperlink with
    	    optional title))
))
 (title composing Composing functions)
 (p Composing a new function can be done like so:
  (m \(def title \(h2 \(anc {0}\) \(link #view #\) {1}\)\))
  By making use of the (tt \(def\)) tag, users then specify
  a LispMark template which can make use of the placeholder
  symbols (tt {0}) and (tt {1}.))
 (p The first argument of the (tt \(def\)) command is the name of
    the new command, while the other contains the template for
    outputted text.)
 (p We can define a "thumbnail" function like this:
  (m  \(def thumb (br)
   \(link {0} \(img {0} {1}\) \(br\) {1} \(br\) \(br\)\))
   ... where we use \(thumb\) to embed the image location given
   as the first argument, followed by the text given as the second
   argument, where both the image and text link to the original image.)
  (m  \(thumb /cgit/cgit.png cgit logo\))
   (thumb /cgit/cgit.png cgit logo)
    
) 